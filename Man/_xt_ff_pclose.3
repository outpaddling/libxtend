\" Generated by c2man from _xt_ff_pclose.c
.TH _xt_ff_pclose 3

.SH NAME
_xt_ff_pclose() - Close a stream created by xt_ff_popen(3)

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
int     _xt_ff_pclose(xt_ff_t *stream)
.ad
.fi

.SH ARGUMENTS
.nf
.na
stream  xt_ff_t stream opened by xt_ff_popen(3)
.ad
.fi

.SH DESCRIPTION

.B _xt_ff_pclose(3)
closes a stream opened by xt_ff_popen(3), and
waits for the child process to complete and returns its
exit status.  Unlike the FILE stream functions popen(3) and
pclose(3), it is not necessary to match xt_ff_popen(3) and
_xt_ff_pclose(3).  The xt_ff_close(3) function automatically
senses whether stream if a pipe (FIFO), and calls
_xt_ff_pclose(3) or _xt_ff_raw_close(3) as needed.

The xt_ff_t system is simpler than and much faster than
traditional FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

Exit status of the child process spawned by xt_ff_popen(3), or -1 on error

.SH EXAMPLES
.nf
.na

xt_ff_t *instream;

if ( (instream = xt_ff_popen("xzcat file.xz", O_RDONLY)) == NULL )
{
    fprintf(stderr, "Failed to read xzcat file.xz.n");
    exit(EX_NOINPUT);
}

xt_ff_close(instream);
.ad
.fi

.SH SEE ALSO

xt_ff_open(3), _xt_ff_pclose(3), popen(3), open(3)

