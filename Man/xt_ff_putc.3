\" Generated by c2man from xt_ff_putc.c
.TH xt_ff_putc 3

.SH NAME
xt_ff_putc() - Write a character to a fast file stream

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
int     xt_ff_putc(xt_ff_t *stream, int ch)
.ad
.fi

.SH ARGUMENTS
.nf
.na
ch      Character to write to stream
stream  Pointer to an xt_ff_t object opened by xt_ff_open(3)
.ad
.fi

.SH DESCRIPTION

.B xt_ff_putc(3)
writes a single character to a xt_ff_t stream opened by xt_ff_open(3).

The xt_ff_t system is simpler than and much faster than
traditional FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

The character written, or EOF if unable to write

.SH EXAMPLES
.nf
.na

char    *infilename, *outfilename;
xt_ff_t *instream, *outstream;
int     ch;

if ( (instream = xt_ff_open(infilename, O_RDONLY)) == NULL )
{
    fprintf(stderr, "Cannot open %s for reading: %s.n",
            infilename, strerror(errno));
    exit(EX_NOINPUT);
}
if ( (outstream = xt_ff_open(outfilename, O_WRONLY|O_CREAT|O_TRUNC)) == NULL )
{
    fprintf(stderr, "Cannot open %s for writing: %s.n",
            outfilename, strerror(errno));
    exit(EX_NOINPUT);
}
while ( (ch = xt_ff_getc(stream)) != EOF )
    xt_ff_puts(ch, outstream);
xt_ff_close(instream);
xt_ff_close(outstream);
.ad
.fi

.SH SEE ALSO

xt_ff_open(3), xt_ff_getc(3), xt_ff_close(3)

